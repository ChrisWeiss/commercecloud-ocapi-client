'use strict'

Object.defineProperty(exports, '__esModule', {
    value: true
})

const _createClass = (function() { function defineProperties(target, props) { for (let i = 0; i < props.length; i++) { const descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) { descriptor.writable = true } Object.defineProperty(target, descriptor.key, descriptor) } } return function(Constructor, protoProps, staticProps) { if (protoProps) { defineProperties(Constructor.prototype, protoProps) } if (staticProps) { defineProperties(Constructor, staticProps) } return Constructor } }()) /**
hop API
o description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

penAPI spec version: 17.8


his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */


const _ApiClient = require('../ApiClient')

const _ApiClient2 = _interopRequireDefault(_ApiClient)

const _SuggestedCategoryModel = require('./SuggestedCategoryModel')

const _SuggestedCategoryModel2 = _interopRequireDefault(_SuggestedCategoryModel)

const _SuggestedContentModel = require('./SuggestedContentModel')

const _SuggestedContentModel2 = _interopRequireDefault(_SuggestedContentModel)

const _SuggestedPhraseModel = require('./SuggestedPhraseModel')

const _SuggestedPhraseModel2 = _interopRequireDefault(_SuggestedPhraseModel)

const _SuggestedProductModel = require('./SuggestedProductModel')

const _SuggestedProductModel2 = _interopRequireDefault(_SuggestedProductModel)

const _SuggestedTermsModel = require('./SuggestedTermsModel')

const _SuggestedTermsModel2 = _interopRequireDefault(_SuggestedTermsModel)

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : {default: obj} }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function') } }

/**
* The SuggestionModel model module.
* @module models/SuggestionModel
* @version 17.8
*/
const SuggestionModel = (function() {
    /**
    * Constructs a new <code>SuggestionModel</code>.
    * Document representing a suggestion.
    * @alias module:models/SuggestionModel
    * @class
    */
    function SuggestionModel() {
        _classCallCheck(this, SuggestionModel)

        this.brands = undefined
        this.categories = undefined
        this.content = undefined
        this.custom_suggestions = undefined
        this.products = undefined
        this.suggested_phrases = undefined
        this.suggested_terms = undefined
    }

    /**
    * Constructs a <code>SuggestionModel</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:models/SuggestionModel} obj Optional instance to populate.
    * @return {module:models/SuggestionModel} The populated <code>SuggestionModel</code> instance.
    */


    _createClass(SuggestionModel, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new SuggestionModel()

                if (data.hasOwnProperty('brands')) {
                    obj.brands = _ApiClient2.default.convertToType(data.brands, ['String'])
                }
                if (data.hasOwnProperty('categories')) {
                    obj.categories = _ApiClient2.default.convertToType(data.categories, [_SuggestedCategoryModel2.default])
                }
                if (data.hasOwnProperty('content')) {
                    obj.content = _ApiClient2.default.convertToType(data.content, [_SuggestedContentModel2.default])
                }
                if (data.hasOwnProperty('custom_suggestions')) {
                    obj.custom_suggestions = _ApiClient2.default.convertToType(data.custom_suggestions, ['String'])
                }
                if (data.hasOwnProperty('products')) {
                    obj.products = _ApiClient2.default.convertToType(data.products, [_SuggestedProductModel2.default])
                }
                if (data.hasOwnProperty('suggested_phrases')) {
                    obj.suggested_phrases = _ApiClient2.default.convertToType(data.suggested_phrases, [_SuggestedPhraseModel2.default])
                }
                if (data.hasOwnProperty('suggested_terms')) {
                    obj.suggested_terms = _ApiClient2.default.convertToType(data.suggested_terms, [_SuggestedTermsModel2.default])
                }
            }

            return obj
        }

        /**
        * The sorted list of suggested brands. This list can be empty.
        * @member {Array.<String>} brands
        */

        /**
        * The sorted list of suggested categories. This list can be empty.
        * @member {Array.<module:models/SuggestedCategoryModel>} categories
        */

        /**
        * The sorted list of suggested content. This list can be empty.
        * @member {Array.<module:models/SuggestedContentModel>} content
        */

        /**
        * The sorted list of suggested custom suggestions. This list can be empty.
        * @member {Array.<String>} custom_suggestions
        */

        /**
        * The sorted list of suggested products. This list can be empty.
        * @member {Array.<module:models/SuggestedProductModel>} products
        */

        /**
        * A list of suggested phrases. This list can be empty.
        * @member {Array.<module:models/SuggestedPhraseModel>} suggested_phrases
        */

        /**
        * A list of suggested terms. This list can be empty.
        * @member {Array.<module:models/SuggestedTermsModel>} suggested_terms
        */

    }])

    return SuggestionModel
}())

exports.default = SuggestionModel
