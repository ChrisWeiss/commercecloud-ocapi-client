'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
hop API
o description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

penAPI spec version: 17.8


his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.



var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* The Range2FilterModel model module.
* @module models/Range2FilterModel
* @version 17.8
*/
var Range2FilterModel = function () {
    /**
    * Constructs a new <code>Range2FilterModel</code>.
    * Document representing a range compare with range filter, named Range2Filter.
    * @alias module:models/Range2FilterModel
    * @class
    * @param fromField {String} The field name of the field that start the range 1.
    * @param toField {String} The field name of the field that end the range 1.
    */

    function Range2FilterModel(fromField, toField) {
        _classCallCheck(this, Range2FilterModel);

        this.filter_mode = undefined;
        this.from_field = undefined;
        this.from_inclusive = undefined;
        this.from_value = undefined;
        this.to_field = undefined;
        this.to_inclusive = undefined;
        this.to_value = undefined;


        this['from_field'] = fromField;this['to_field'] = toField;
    }

    /**
    * Constructs a <code>Range2FilterModel</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:models/Range2FilterModel} obj Optional instance to populate.
    * @return {module:models/Range2FilterModel} The populated <code>Range2FilterModel</code> instance.
    */


    _createClass(Range2FilterModel, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new Range2FilterModel();

                if (data.hasOwnProperty('filter_mode')) {
                    obj['filter_mode'] = _ApiClient2.default.convertToType(data['filter_mode'], 'String');
                }
                if (data.hasOwnProperty('from_field')) {
                    obj['from_field'] = _ApiClient2.default.convertToType(data['from_field'], 'String');
                }
                if (data.hasOwnProperty('from_inclusive')) {
                    obj['from_inclusive'] = _ApiClient2.default.convertToType(data['from_inclusive'], 'Boolean');
                }
                if (data.hasOwnProperty('from_value')) {
                    obj['from_value'] = _ApiClient2.default.convertToType(data['from_value'], Object);
                }
                if (data.hasOwnProperty('to_field')) {
                    obj['to_field'] = _ApiClient2.default.convertToType(data['to_field'], 'String');
                }
                if (data.hasOwnProperty('to_inclusive')) {
                    obj['to_inclusive'] = _ApiClient2.default.convertToType(data['to_inclusive'], 'Boolean');
                }
                if (data.hasOwnProperty('to_value')) {
                    obj['to_value'] = _ApiClient2.default.convertToType(data['to_value'], Object);
                }
            }
            return obj;
        }

        /**
        * compare mode: overlap, containing, contained (default to \"overlap\"). It is optional.
        * @member {module:models/Range2FilterModel.FilterModeEnum} filter_mode
        */

        /**
        * The field name of the field that start the range 1.
        * @member {String} from_field
        */

        /**
        * A flag indicating whether the lower bound of the range is inclusive (or exclusive). The default is true (which means that the given  lower bound is inclusive).
        * @member {Boolean} from_inclusive
        */

        /**
        * The configured lower bound of the filter range. The lower bound is optional. If not given, the range is  open ended with respect to the lower bound.
        * @member {Object} from_value
        */

        /**
        * The field name of the field that end the range 1.
        * @member {String} to_field
        */

        /**
        * A flag indicating whether the upper bound of the range is inclusive (or exclusive). The default is true (which means that the given  upper bound is inclusive).
        * @member {Boolean} to_inclusive
        */

        /**
        * The configured upper bound of the filter range. The upper bound is optional. If not given, the range is  open ended with respect to the upper bound.
        * @member {Object} to_value
        */


        /**
        * Allowed values for the <code>filter_mode</code> property.
        * @enum {String}
        * @readonly
        */

    }]);

    return Range2FilterModel;
}();

Range2FilterModel.FilterModeEnum = {

    /**
     * value: "overlap"
     * @const
     */
    "overlap": "overlap",

    /**
     * value: "containing"
     * @const
     */
    "containing": "containing",

    /**
     * value: "contained"
     * @const
     */
    "contained": "contained"
};
exports.default = Range2FilterModel;