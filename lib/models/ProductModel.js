'use strict'

Object.defineProperty(exports, '__esModule', {
    value: true
})

const _createClass = (function() { function defineProperties(target, props) { for (let i = 0; i < props.length; i++) { const descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) { descriptor.writable = true } Object.defineProperty(target, descriptor.key, descriptor) } } return function(Constructor, protoProps, staticProps) { if (protoProps) { defineProperties(Constructor.prototype, protoProps) } if (staticProps) { defineProperties(Constructor, staticProps) } return Constructor } }()) /**
hop API
o description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

penAPI spec version: 17.8


                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * NOTE: This class is auto generated by the swagger code generator program.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.




const _ApiClient = require('../ApiClient')

const _ApiClient2 = _interopRequireDefault(_ApiClient)

const _BundledProductModel = require('./BundledProductModel')

const _BundledProductModel2 = _interopRequireDefault(_BundledProductModel)

const _ImageGroupModel = require('./ImageGroupModel')

const _ImageGroupModel2 = _interopRequireDefault(_ImageGroupModel)

const _InventoryModel = require('./InventoryModel')

const _InventoryModel2 = _interopRequireDefault(_InventoryModel)

const _MasterModel = require('./MasterModel')

const _MasterModel2 = _interopRequireDefault(_MasterModel)

const _OptionModel = require('./OptionModel')

const _OptionModel2 = _interopRequireDefault(_OptionModel)

const _ProductLinkModel = require('./ProductLinkModel')

const _ProductLinkModel2 = _interopRequireDefault(_ProductLinkModel)

const _ProductPromotionModel = require('./ProductPromotionModel')

const _ProductPromotionModel2 = _interopRequireDefault(_ProductPromotionModel)

const _ProductTypeModel = require('./ProductTypeModel')

const _ProductTypeModel2 = _interopRequireDefault(_ProductTypeModel)

const _RecommendationModel = require('./RecommendationModel')

const _RecommendationModel2 = _interopRequireDefault(_RecommendationModel)

const _VariantModel = require('./VariantModel')

const _VariantModel2 = _interopRequireDefault(_VariantModel)

const _VariationAttributeModel = require('./VariationAttributeModel')

const _VariationAttributeModel2 = _interopRequireDefault(_VariationAttributeModel)

const _VariationGroupModel = require('./VariationGroupModel')

const _VariationGroupModel2 = _interopRequireDefault(_VariationGroupModel)

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : {default: obj} }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function') } }

/**
* The ProductModel model module.
* @module models/ProductModel
* @version 17.8
*/
const ProductModel = (function() {
    /**
    * Constructs a new <code>ProductModel</code>.
    * Document representing a product.
    * @alias module:models/ProductModel
    * @class
    * @param id {String} The id (SKU) of the product.
    */
    function ProductModel(id) {
        _classCallCheck(this, ProductModel)

        this.brand = undefined
        this.bundled_products = undefined
        this.currency = undefined
        this.ean = undefined
        this.fetch_date = undefined
        this.id = undefined
        this.image_groups = undefined
        this.inventories = undefined
        this.inventory = undefined
        this.long_description = undefined
        this.manufacturer_name = undefined
        this.manufacturer_sku = undefined
        this.master = undefined
        this.min_order_quantity = undefined
        this.name = undefined
        this.options = undefined
        this.page_description = undefined
        this.page_keywords = undefined
        this.page_title = undefined
        this.price = undefined
        this.price_max = undefined
        this.prices = undefined
        this.primary_category_id = undefined
        this.product_links = undefined
        this.product_promotions = undefined
        this.recommendations = undefined
        this.set_products = undefined
        this.short_description = undefined
        this.step_quantity = undefined
        this.type = undefined
        this.unit = undefined
        this.upc = undefined
        this.variants = undefined
        this.variation_attributes = undefined
        this.variation_groups = undefined
        this.variation_values = undefined

        this.id = id
    }

    /**
    * Constructs a <code>ProductModel</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:models/ProductModel} obj Optional instance to populate.
    * @return {module:models/ProductModel} The populated <code>ProductModel</code> instance.
    */


    _createClass(ProductModel, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new ProductModel()

                if (data.hasOwnProperty('brand')) {
                    obj.brand = _ApiClient2.default.convertToType(data.brand, 'String')
                }
                if (data.hasOwnProperty('bundled_products')) {
                    obj.bundled_products = _ApiClient2.default.convertToType(data.bundled_products, [_BundledProductModel2.default])
                }
                if (data.hasOwnProperty('currency')) {
                    obj.currency = _ApiClient2.default.convertToType(data.currency, 'String')
                }
                if (data.hasOwnProperty('ean')) {
                    obj.ean = _ApiClient2.default.convertToType(data.ean, 'String')
                }
                if (data.hasOwnProperty('fetch_date')) {
                    obj.fetch_date = _ApiClient2.default.convertToType(data.fetch_date, 'Number')
                }
                if (data.hasOwnProperty('id')) {
                    obj.id = _ApiClient2.default.convertToType(data.id, 'String')
                }
                if (data.hasOwnProperty('image_groups')) {
                    obj.image_groups = _ApiClient2.default.convertToType(data.image_groups, [_ImageGroupModel2.default])
                }
                if (data.hasOwnProperty('inventories')) {
                    obj.inventories = _ApiClient2.default.convertToType(data.inventories, [_InventoryModel2.default])
                }
                if (data.hasOwnProperty('inventory')) {
                    obj.inventory = _InventoryModel2.default.constructFromObject(data.inventory)
                }
                if (data.hasOwnProperty('long_description')) {
                    obj.long_description = _ApiClient2.default.convertToType(data.long_description, 'String')
                }
                if (data.hasOwnProperty('manufacturer_name')) {
                    obj.manufacturer_name = _ApiClient2.default.convertToType(data.manufacturer_name, 'String')
                }
                if (data.hasOwnProperty('manufacturer_sku')) {
                    obj.manufacturer_sku = _ApiClient2.default.convertToType(data.manufacturer_sku, 'String')
                }
                if (data.hasOwnProperty('master')) {
                    obj.master = _MasterModel2.default.constructFromObject(data.master)
                }
                if (data.hasOwnProperty('min_order_quantity')) {
                    obj.min_order_quantity = _ApiClient2.default.convertToType(data.min_order_quantity, 'Number')
                }
                if (data.hasOwnProperty('name')) {
                    obj.name = _ApiClient2.default.convertToType(data.name, 'String')
                }
                if (data.hasOwnProperty('options')) {
                    obj.options = _ApiClient2.default.convertToType(data.options, [_OptionModel2.default])
                }
                if (data.hasOwnProperty('page_description')) {
                    obj.page_description = _ApiClient2.default.convertToType(data.page_description, 'String')
                }
                if (data.hasOwnProperty('page_keywords')) {
                    obj.page_keywords = _ApiClient2.default.convertToType(data.page_keywords, 'String')
                }
                if (data.hasOwnProperty('page_title')) {
                    obj.page_title = _ApiClient2.default.convertToType(data.page_title, 'String')
                }
                if (data.hasOwnProperty('price')) {
                    obj.price = _ApiClient2.default.convertToType(data.price, 'Number')
                }
                if (data.hasOwnProperty('price_max')) {
                    obj.price_max = _ApiClient2.default.convertToType(data.price_max, 'Number')
                }
                if (data.hasOwnProperty('prices')) {
                    obj.prices = _ApiClient2.default.convertToType(data.prices, {String: 'Number'})
                }
                if (data.hasOwnProperty('primary_category_id')) {
                    obj.primary_category_id = _ApiClient2.default.convertToType(data.primary_category_id, 'String')
                }
                if (data.hasOwnProperty('product_links')) {
                    obj.product_links = _ApiClient2.default.convertToType(data.product_links, [_ProductLinkModel2.default])
                }
                if (data.hasOwnProperty('product_promotions')) {
                    obj.product_promotions = _ApiClient2.default.convertToType(data.product_promotions, [_ProductPromotionModel2.default])
                }
                if (data.hasOwnProperty('recommendations')) {
                    obj.recommendations = _ApiClient2.default.convertToType(data.recommendations, [_RecommendationModel2.default])
                }
                if (data.hasOwnProperty('set_products')) {
                    obj.set_products = _ApiClient2.default.convertToType(data.set_products, [ProductModel])
                }
                if (data.hasOwnProperty('short_description')) {
                    obj.short_description = _ApiClient2.default.convertToType(data.short_description, 'String')
                }
                if (data.hasOwnProperty('step_quantity')) {
                    obj.step_quantity = _ApiClient2.default.convertToType(data.step_quantity, 'Number')
                }
                if (data.hasOwnProperty('type')) {
                    obj.type = _ProductTypeModel2.default.constructFromObject(data.type)
                }
                if (data.hasOwnProperty('unit')) {
                    obj.unit = _ApiClient2.default.convertToType(data.unit, 'String')
                }
                if (data.hasOwnProperty('upc')) {
                    obj.upc = _ApiClient2.default.convertToType(data.upc, 'String')
                }
                if (data.hasOwnProperty('variants')) {
                    obj.variants = _ApiClient2.default.convertToType(data.variants, [_VariantModel2.default])
                }
                if (data.hasOwnProperty('variation_attributes')) {
                    obj.variation_attributes = _ApiClient2.default.convertToType(data.variation_attributes, [_VariationAttributeModel2.default])
                }
                if (data.hasOwnProperty('variation_groups')) {
                    obj.variation_groups = _ApiClient2.default.convertToType(data.variation_groups, [_VariationGroupModel2.default])
                }
                if (data.hasOwnProperty('variation_values')) {
                    obj.variation_values = _ApiClient2.default.convertToType(data.variation_values, {String: 'String'})
                }
            }
            return obj
        }

        /**
        * The product's brand.
        * @member {String} brand
        */

        /**
        * The array of all bundled products of this product.
        * @member {Array.<module:models/BundledProductModel>} bundled_products
        */

        /**
        * The ISO 4217 mnemonic code of the currency.
        * @member {String} currency
        */

        /**
        * The European Article Number.
        * @member {String} ean
        */

        /**
        * @member {Number} fetch_date
        */

        /**
        * The id (SKU) of the product.
        * @member {String} id
        */

        /**
        * The array of product image groups.
        * @member {Array.<module:models/ImageGroupModel>} image_groups
        */

        /**
        * The array of product inventories explicitly requested via 'inventory_ids' query parameter. This property  is only returned in context of the 'availability' expansion.
        * @member {Array.<module:models/InventoryModel>} inventories
        */

        /**
        * The site default inventory information. This property is only  returned in context of the 'availability' expansion.
        * @member {module:models/InventoryModel} inventory
        */

        /**
        * The localized product long description.
        * @member {String} long_description
        */

        /**
        * The products manufacturer name.
        * @member {String} manufacturer_name
        */

        /**
        * The products manufacturer sku.
        * @member {String} manufacturer_sku
        */

        /**
        * The master product information. Only for types master, variation group and variant.
        * @member {module:models/MasterModel} master
        */

        /**
        * The minimum order quantity for this product.
        * @member {Number} min_order_quantity
        */

        /**
        * The localized product name.
        * @member {String} name
        */

        /**
        * The array of product options. This array can be empty. Only for type option.
        * @member {Array.<module:models/OptionModel>} options
        */

        /**
        * The localized products page description.
        * @member {String} page_description
        */

        /**
        * The localized products page description.
        * @member {String} page_keywords
        */

        /**
        * The localized products page title.
        * @member {String} page_title
        */

        /**
        * The sales price of the product. In case of complex products like master or set this is the minimum price of  related child products.
        * @member {Number} price
        */

        /**
        * The maximum sales of related child products in case of complex products like master or set.
        * @member {Number} price_max
        */

        /**
        * The prices map with price book ids and their values.
        * @member {Object.<String, Number>} prices
        */

        /**
        * The id of the products primary category.
        * @member {String} primary_category_id
        */

        /**
        * The array of source and target products links information.
        * @member {Array.<module:models/ProductLinkModel>} product_links
        */

        /**
        * The array of active customer product promotions for this product. This array can be empty.  Coupon promotions are not returned in this array.
        * @member {Array.<module:models/ProductPromotionModel>} product_promotions
        */

        /**
        * Returns a list of recommendations.
        * @member {Array.<module:models/RecommendationModel>} recommendations
        */

        /**
        * The array of set products of this product.
        * @member {Array.<module:models/ProductModel>} set_products
        */

        /**
        * The localized product short description.
        * @member {String} short_description
        */

        /**
        * The steps in which the order amount of the product can be  increased.
        * @member {Number} step_quantity
        */

        /**
        * The product type information. Can be one or multiple of the following values: item,master,variation_group,variant,bundle,set.
        * @member {module:models/ProductTypeModel} type
        */

        /**
        * The sales unit of the product.
        * @member {String} unit
        */

        /**
        * The Universal Product Code.
        * @member {String} upc
        */

        /**
        * The array of actual variants. This array can be empty. Only for types master, variation group and variant.
        * @member {Array.<module:models/VariantModel>} variants
        */

        /**
        * Sorted array of variation attributes information. This array can be empty. Only for types master,  variation group and variant.
        * @member {Array.<module:models/VariationAttributeModel>} variation_attributes
        */

        /**
        * The array of actual variation groups. This array can be empty. Only for types master, variation group and variant.
        * @member {Array.<module:models/VariationGroupModel>} variation_groups
        */

        /**
        * The actual variation attribute id - value pairs. Only for type variant and  variation group.
        * @member {Object.<String, String>} variation_values
        */

    }])

    return ProductModel
}())

exports.default = ProductModel
