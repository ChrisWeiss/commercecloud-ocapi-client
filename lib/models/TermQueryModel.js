'use strict'

Object.defineProperty(exports, '__esModule', {
    value: true
})

const _createClass = (function() { function defineProperties(target, props) { for (let i = 0; i < props.length; i++) { const descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) { descriptor.writable = true } Object.defineProperty(target, descriptor.key, descriptor) } } return function(Constructor, protoProps, staticProps) { if (protoProps) { defineProperties(Constructor.prototype, protoProps) } if (staticProps) { defineProperties(Constructor, staticProps) } return Constructor } }()) /**
hop API
o description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

penAPI spec version: 17.8


                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * NOTE: This class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.




const _ApiClient = require('../ApiClient')

const _ApiClient2 = _interopRequireDefault(_ApiClient)

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : {default: obj} }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function') } }

/**
* The TermQueryModel model module.
* @module models/TermQueryModel
* @version 17.8
*/
const TermQueryModel = (function() {
  /**
  * Constructs a new <code>TermQueryModel</code>.
  * A term query matches one (or more) value(s) against one (or more) document field(s). A document is considered a hit  if one of the values matches (exactly) with at least one of the given fields.  The operator \&quot;is\&quot; can only take  one value, while \&quot;one_of\&quot; can take multiple. If multiple fields are specified, they are combined using the OR operator.
  * @alias module:models/TermQueryModel
  * @class
  * @param fields {Array.<String>} The document field(s), the value(s) are matched against, combined with the operator.
  * @param operator {module:models/TermQueryModel.OperatorEnum} Returns the operator to use for the term query.
  */
    function TermQueryModel(fields, operator) {
        _classCallCheck(this, TermQueryModel)

        this.fields = undefined
        this.operator = undefined
        this.values = undefined

        this.fields = fields; this.operator = operator
    }

  /**
  * Constructs a <code>TermQueryModel</code> from a plain JavaScript object, optionally creating a new instance.
  * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
  * @param {Object} data The plain JavaScript object bearing properties of interest.
  * @param {module:models/TermQueryModel} obj Optional instance to populate.
  * @return {module:models/TermQueryModel} The populated <code>TermQueryModel</code> instance.
  */


    _createClass(TermQueryModel, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new TermQueryModel()

                if (data.hasOwnProperty('fields')) {
                    obj.fields = _ApiClient2.default.convertToType(data.fields, ['String'])
                }
                if (data.hasOwnProperty('operator')) {
                    obj.operator = _ApiClient2.default.convertToType(data.operator, 'String')
                }
                if (data.hasOwnProperty('values')) {
                    obj.values = _ApiClient2.default.convertToType(data.values, [Object])
                }
            }

            return obj
        }

    /**
    * The document field(s), the value(s) are matched against, combined with the operator.
    * @member {Array.<String>} fields
    */

    /**
    * Returns the operator to use for the term query.
    * @member {module:models/TermQueryModel.OperatorEnum} operator
    */

    /**
    * The values, the field(s) are compared against, combined with the operator.
    * @member {Array.<Object>} values
    */

    /**
    * Allowed values for the <code>operator</code> property.
    * @enum {String}
    * @readonly
    */

    }])

    return TermQueryModel
}())

TermQueryModel.OperatorEnum = {

  /**
   * value: "is"
   * @const
   */
    is: 'is',

  /**
   * value: "one_of"
   * @const
   */
    one_of: 'one_of',

  /**
   * value: "is_null"
   * @const
   */
    is_null: 'is_null',

  /**
   * value: "is_not_null"
   * @const
   */
    is_not_null: 'is_not_null',

  /**
   * value: "less"
   * @const
   */
    less: 'less',

  /**
   * value: "greater"
   * @const
   */
    greater: 'greater',

  /**
   * value: "not_in"
   * @const
   */
    not_in: 'not_in',

  /**
   * value: "neq"
   * @const
   */
    neq: 'neq'
}
exports.default = TermQueryModel
