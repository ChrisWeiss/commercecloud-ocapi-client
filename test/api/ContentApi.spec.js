/**
 * Shop API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 17.8
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD.
        define(['expect.js', '../../src/index'], factory);
    } else if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        factory(require('expect.js'), require('../../src/index'));
    } else {
        // Browser globals (root is window)
        factory(root.expect, root.ShopApi);
    }
}(this, function(expect, ShopApi) {
    'use strict'

    var instance;

    beforeEach(function() {
        instance = new ShopApi.ContentApi()

        const defaultClient = ShopApi.ApiClient.instance
        defaultClient.defaultHeaders = {
            'x-dw-client-id': '5640cc6b-f5e9-466e-9134-9853e9f9db93'
        }
        defaultClient.basePath = 'https://thingproxy.freeboard.io/fetch/https://mobify-tech-prtnr-na03-dw.demandware.net/s/2017refresh/dw/shop/v17_8'.replace(/\/+$/, '')
    });

    var getProperty = function(object, getter, property) {
        // Use getter method if present; otherwise, get the property directly.
        if (typeof object[getter] === 'function')
            return object[getter]();
        else
            return object[property];
    }

    var setProperty = function(object, setter, property, value) {
        // Use setter method if present; otherwise, set the property directly.
        if (typeof object[setter] === 'function')
            object[setter](value);
        else
            object[property] = value;
    }

    describe('ContentApi', function() {
        describe('getContentByID', function() {
            it('should call getContentByID successfully', () => {
                instance.getContentByID('')
                    .then((content) => {
                        if (!content) throw error;

                        expect(content.id).to.be('');
                    })
            })
        });
        describe('getContentByIDs', function() {
            it('should call getContentByIDs successfully', function(done) {
                //uncomment below and update the code to test getContentByIDs
                //instance.getContentByIDs(function(error) {
                //  if (error) throw error;
                //expect().to.be();
                //});
                done();
            });
        });
    });

}));
