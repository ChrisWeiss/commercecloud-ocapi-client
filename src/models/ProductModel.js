/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2017 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

/* eslint-disable dot-notation */
/**
 * Shop API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 17.8
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient'
import BundledProductModel from './BundledProductModel'
import ImageGroupModel from './ImageGroupModel'
import InventoryModel from './InventoryModel'
import MasterModel from './MasterModel'
import OptionModel from './OptionModel'
import ProductLinkModel from './ProductLinkModel'
import ProductPromotionModel from './ProductPromotionModel'
import ProductTypeModel from './ProductTypeModel'
import RecommendationModel from './RecommendationModel'
import VariantModel from './VariantModel'
import VariationAttributeModel from './VariationAttributeModel'
import VariationGroupModel from './VariationGroupModel'

/**
* The ProductModel model module.
* @module models/ProductModel
* @version 17.8
*/
export default class ProductModel {
    /**
    * Constructs a new <code>ProductModel</code>.
    * Document representing a product.
    * @alias module:models/ProductModel
    * @class
    * @param id {String} The id (SKU) of the product.
    */
    constructor(id) {
        /**
        * The product's brand.
        * @member {String} brand
        */
        this.brand = undefined

        /**
        * The array of all bundled products of this product.
        * @member {Array.<module:models/BundledProductModel>} bundled_products
        */
        this.bundled_products = undefined

        /**
        * The ISO 4217 mnemonic code of the currency.
        * @member {String} currency
        */
        this.currency = undefined

        /**
        * The European Article Number.
        * @member {String} ean
        */
        this.ean = undefined

        /**
        * @member {Number} fetch_date
        */
        this.fetch_date = undefined

        /**
        * The id (SKU) of the product.
        * @member {String} id
        */
        this.id = id

        /**
        * The array of product image groups.
        * @member {Array.<module:models/ImageGroupModel>} image_groups
        */
        this.image_groups = undefined

        /**
        * The array of product inventories explicitly requested via 'inventory_ids' query parameter. This property  is only returned in context of the 'availability' expansion.
        * @member {Array.<module:models/InventoryModel>} inventories
        */
        this.inventories = undefined

        /**
        * The site default inventory information. This property is only  returned in context of the 'availability' expansion.
        * @member {module:models/InventoryModel} inventory
        */
        this.inventory = undefined

        /**
        * The localized product long description.
        * @member {String} long_description
        */
        this.long_description = undefined

        /**
        * The products manufacturer name.
        * @member {String} manufacturer_name
        */
        this.manufacturer_name = undefined

        /**
        * The products manufacturer sku.
        * @member {String} manufacturer_sku
        */
        this.manufacturer_sku = undefined

        /**
        * The master product information. Only for types master, variation group and variant.
        * @member {module:models/MasterModel} master
        */
        this.master = undefined

        /**
        * The minimum order quantity for this product.
        * @member {Number} min_order_quantity
        */
        this.min_order_quantity = undefined

        /**
        * The localized product name.
        * @member {String} name
        */
        this.name = undefined

        /**
        * The array of product options. This array can be empty. Only for type option.
        * @member {Array.<module:models/OptionModel>} options
        */
        this.options = undefined

        /**
        * The localized products page description.
        * @member {String} page_description
        */
        this.page_description = undefined

        /**
        * The localized products page description.
        * @member {String} page_keywords
        */
        this.page_keywords = undefined

        /**
        * The localized products page title.
        * @member {String} page_title
        */
        this.page_title = undefined

        /**
        * The sales price of the product. In case of complex products like master or set this is the minimum price of  related child products.
        * @member {Number} price
        */
        this.price = undefined

        /**
        * The maximum sales of related child products in case of complex products like master or set.
        * @member {Number} price_max
        */
        this.price_max = undefined

        /**
        * The prices map with price book ids and their values.
        * @member {Object.<String, Number>} prices
        */
        this.prices = undefined

        /**
        * The id of the products primary category.
        * @member {String} primary_category_id
        */
        this.primary_category_id = undefined

        /**
        * The array of source and target products links information.
        * @member {Array.<module:models/ProductLinkModel>} product_links
        */
        this.product_links = undefined

        /**
        * The array of active customer product promotions for this product. This array can be empty.  Coupon promotions are not returned in this array.
        * @member {Array.<module:models/ProductPromotionModel>} product_promotions
        */
        this.product_promotions = undefined

        /**
        * Returns a list of recommendations.
        * @member {Array.<module:models/RecommendationModel>} recommendations
        */
        this.recommendations = undefined

        /**
        * The array of set products of this product.
        * @member {Array.<module:models/ProductModel>} set_products
        */
        this.set_products = undefined

        /**
        * The localized product short description.
        * @member {String} short_description
        */
        this.short_description = undefined

        /**
        * The steps in which the order amount of the product can be  increased.
        * @member {Number} step_quantity
        */
        this.step_quantity = undefined

        /**
        * The product type information. Can be one or multiple of the following values: item,master,variation_group,variant,bundle,set.
        * @member {module:models/ProductTypeModel} type
        */
        this.type = undefined

        /**
        * The sales unit of the product.
        * @member {String} unit
        */
        this.unit = undefined

        /**
        * The Universal Product Code.
        * @member {String} upc
        */
        this.upc = undefined

        /**
        * The array of actual variants. This array can be empty. Only for types master, variation group and variant.
        * @member {Array.<module:models/VariantModel>} variants
        */
        this.variants = undefined

        /**
        * Sorted array of variation attributes information. This array can be empty. Only for types master,  variation group and variant.
        * @member {Array.<module:models/VariationAttributeModel>} variation_attributes
        */
        this.variation_attributes = undefined

        /**
        * The array of actual variation groups. This array can be empty. Only for types master, variation group and variant.
        * @member {Array.<module:models/VariationGroupModel>} variation_groups
        */
        this.variation_groups = undefined

        /**
        * The actual variation attribute id - value pairs. Only for type variant and  variation group.
        * @member {Object.<String, String>} variation_values
        */
        this.variation_values = undefined
    }

    /**
    * Constructs a <code>ProductModel</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:models/ProductModel} obj Optional instance to populate.
    * @return {module:models/ProductModel} The populated <code>ProductModel</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductModel()

            if (data.hasOwnProperty('brand')) {
                obj['brand'] = ApiClient.convertToType(data['brand'], 'String')
            }
            if (data.hasOwnProperty('bundled_products')) {
                obj['bundled_products'] = ApiClient.convertToType(data['bundled_products'], [BundledProductModel])
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String')
            }
            if (data.hasOwnProperty('ean')) {
                obj['ean'] = ApiClient.convertToType(data['ean'], 'String')
            }
            if (data.hasOwnProperty('fetch_date')) {
                obj['fetch_date'] = ApiClient.convertToType(data['fetch_date'], 'Number')
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String')
            }
            if (data.hasOwnProperty('image_groups')) {
                obj['image_groups'] = ApiClient.convertToType(data['image_groups'], [ImageGroupModel])
            }
            if (data.hasOwnProperty('inventories')) {
                obj['inventories'] = ApiClient.convertToType(data['inventories'], [InventoryModel])
            }
            if (data.hasOwnProperty('inventory')) {
                obj['inventory'] = InventoryModel.constructFromObject(data['inventory'])
            }
            if (data.hasOwnProperty('long_description')) {
                obj['long_description'] = ApiClient.convertToType(data['long_description'], 'String')
            }
            if (data.hasOwnProperty('manufacturer_name')) {
                obj['manufacturer_name'] = ApiClient.convertToType(data['manufacturer_name'], 'String')
            }
            if (data.hasOwnProperty('manufacturer_sku')) {
                obj['manufacturer_sku'] = ApiClient.convertToType(data['manufacturer_sku'], 'String')
            }
            if (data.hasOwnProperty('master')) {
                obj['master'] = MasterModel.constructFromObject(data['master'])
            }
            if (data.hasOwnProperty('min_order_quantity')) {
                obj['min_order_quantity'] = ApiClient.convertToType(data['min_order_quantity'], 'Number')
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String')
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], [OptionModel])
            }
            if (data.hasOwnProperty('page_description')) {
                obj['page_description'] = ApiClient.convertToType(data['page_description'], 'String')
            }
            if (data.hasOwnProperty('page_keywords')) {
                obj['page_keywords'] = ApiClient.convertToType(data['page_keywords'], 'String')
            }
            if (data.hasOwnProperty('page_title')) {
                obj['page_title'] = ApiClient.convertToType(data['page_title'], 'String')
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number')
            }
            if (data.hasOwnProperty('price_max')) {
                obj['price_max'] = ApiClient.convertToType(data['price_max'], 'Number')
            }
            if (data.hasOwnProperty('prices')) {
                obj['prices'] = ApiClient.convertToType(data['prices'], {String: 'Number'})
            }
            if (data.hasOwnProperty('primary_category_id')) {
                obj['primary_category_id'] = ApiClient.convertToType(data['primary_category_id'], 'String')
            }
            if (data.hasOwnProperty('product_links')) {
                obj['product_links'] = ApiClient.convertToType(data['product_links'], [ProductLinkModel])
            }
            if (data.hasOwnProperty('product_promotions')) {
                obj['product_promotions'] = ApiClient.convertToType(data['product_promotions'], [ProductPromotionModel])
            }
            if (data.hasOwnProperty('recommendations')) {
                obj['recommendations'] = ApiClient.convertToType(data['recommendations'], [RecommendationModel])
            }
            if (data.hasOwnProperty('set_products')) {
                obj['set_products'] = ApiClient.convertToType(data['set_products'], [ProductModel])
            }
            if (data.hasOwnProperty('short_description')) {
                obj['short_description'] = ApiClient.convertToType(data['short_description'], 'String')
            }
            if (data.hasOwnProperty('step_quantity')) {
                obj['step_quantity'] = ApiClient.convertToType(data['step_quantity'], 'Number')
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ProductTypeModel.constructFromObject(data['type'])
            }
            if (data.hasOwnProperty('unit')) {
                obj['unit'] = ApiClient.convertToType(data['unit'], 'String')
            }
            if (data.hasOwnProperty('upc')) {
                obj['upc'] = ApiClient.convertToType(data['upc'], 'String')
            }
            if (data.hasOwnProperty('variants')) {
                obj['variants'] = ApiClient.convertToType(data['variants'], [VariantModel])
            }
            if (data.hasOwnProperty('variation_attributes')) {
                obj['variation_attributes'] = ApiClient.convertToType(data['variation_attributes'], [VariationAttributeModel])
            }
            if (data.hasOwnProperty('variation_groups')) {
                obj['variation_groups'] = ApiClient.convertToType(data['variation_groups'], [VariationGroupModel])
            }
            if (data.hasOwnProperty('variation_values')) {
                obj['variation_values'] = ApiClient.convertToType(data['variation_values'], {String: 'String'})
            }
        }
        return obj
    }
}
