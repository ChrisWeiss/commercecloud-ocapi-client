/**
 * Shop API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 17.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient'
import OrderSearchHitModel from './OrderSearchHitModel'
import QueryModel from './QueryModel'
import ResultPageModel from './ResultPageModel'
import SortModel from './SortModel'





/**
* The OrderSearchResultModel model module.
* @module models/OrderSearchResultModel
* @version 17.8
*/
export default class OrderSearchResultModel {
    /**
    * Constructs a new <code>OrderSearchResultModel</code>.
    * Document representing an order search result.
    * @alias module:models/OrderSearchResultModel
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>OrderSearchResultModel</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:models/OrderSearchResultModel} obj Optional instance to populate.
    * @return {module:models/OrderSearchResultModel} The populated <code>OrderSearchResultModel</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderSearchResultModel()

            
            
            

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number')
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], [Object]);
            }
            if (data.hasOwnProperty('expand')) {
                obj['expand'] = ApiClient.convertToType(data['expand'], ['String']);
            }
            if (data.hasOwnProperty('hits')) {
                obj['hits'] = ApiClient.convertToType(data['hits'], [OrderSearchHitModel]);
            }
            if (data.hasOwnProperty('next')) {
                obj['next'] = ResultPageModel.constructFromObject(data['next']);
            }
            if (data.hasOwnProperty('previous')) {
                obj['previous'] = ResultPageModel.constructFromObject(data['previous']);
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = QueryModel.constructFromObject(data['query']);
            }
            if (data.hasOwnProperty('select')) {
                obj['select'] = ApiClient.convertToType(data['select'], 'String')
            }
            if (data.hasOwnProperty('sorts')) {
                obj['sorts'] = ApiClient.convertToType(data['sorts'], [SortModel]);
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Number')
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number')
            }
        }
        return obj;
    }

    /**
    * The number of returned documents.
    * @member {Number} count
    */
    count = undefined
    /**
    * @member {Array.<Object>} data
    */
    data = undefined
    /**
    * The list of expands set for the search request. Expands are optional.
    * @member {Array.<String>} expand
    */
    expand = undefined
    /**
    * The sorted array of search hits. This array can be empty.
    * @member {Array.<module:models/OrderSearchHitModel>} hits
    */
    hits = undefined
    /**
    * The data that can be used (as parameters on the search request) to retrieve the next result page.
    * @member {module:models/ResultPageModel} next
    */
    next = undefined
    /**
    * The data that can be used to retrieve the previous result page (as parameters on the search request).
    * @member {module:models/ResultPageModel} previous
    */
    previous = undefined
    /**
    * The query passed into the search
    * @member {module:models/QueryModel} query
    */
    query = undefined
    /**
    * The fields that you want to select.
    * @member {String} select
    */
    select = undefined
    /**
    * The list of sort clauses configured for the search request. Sort clauses are optional.
    * @member {Array.<module:models/SortModel>} sorts
    */
    sorts = undefined
    /**
    * The zero-based index of the first search hit to include in the result.
    * @member {Number} start
    */
    start = undefined
    /**
    * The total number of documents.
    * @member {Number} total
    */
    total = undefined








}


